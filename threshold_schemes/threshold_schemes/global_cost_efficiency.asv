function [binary threshold globalcosteffmax costmax]=global_cost_efficiency(w)


%find the max value of global cost efficiency versus cost
%adopted from Bassett & Bullmore Cognitive fitness of COST EFFICIENCT BRAIN
%FUNCTIONAL NETWORKS PNAS, 2009
%needs efficiency and degrees_und from BCT 

%INPUT:         w = weighted undirected or directed matrix
%OUTPTU:   binary = thresholded matrix
%       threshold = threshold [0 1] that maximize the global cost efficiency 
%globalcosteffmax = value of global cost efficiency   
%         costmax = cost of the network at the maximum global cost efficiency 
 
%DIMITRIADIS STAVROS 5/2009 

tic

thres(1:1000)=0;
thres=(0:0.001:1);


[d1 d2]=size(w);

%initialize variables and matrices
binary(1:d1,1:d1)=0;
globalcosteff(1:1000)=0;
E=0;
cost(1:1000)=0;
total=0;

%CALCULATE THE POSSIBLE NUMBER OF CONNECTIONS
%CHECK FOR DIRECTIONALITY

if(w(1,2)==w(2,1))
    no=(d1*(d1-1))/2;

for i=1:1000
    binary(1:d1,1:d1)=0;
    for k=1:d1
        for l=1:d1
            if(w(k,l) > thres(i))
                binary(k,l)=1;
                binary(l,k)=1;
            end
        end
    end
    
    %calculate global efficiency
    E=efficiency(binary);
    E1=mean(mean(E));
    [deg] = degrees_und(binary);
    total=sum(deg);
    cost(i)=(0.5*total)/no;
    globalcosteff(i)=E1-cost(i);

end

[a b]=max(globalcosteff);

threshold=thres(b);

    for k=1:d1
        for l=(k+1):d1
            if(w(k,l) > thres(b))
                binary(k,l)=1;
                binary(l,k)=1;
            end
        end
    end

costmax=0;
costmax=cost(b);
globalcosteffmax=globalcosteff(b);

%plot(cost,globalcosteff)

toc